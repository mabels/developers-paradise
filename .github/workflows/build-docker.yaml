name: Build Docker

on:
  push:
    branches: [ main ]
  schedule:
    - cron: "3 3 * * *"
#  pull_request:
#    branches: [ '**' ]

jobs:
  update-manifest:
    runs-on: ['self-hosted', 'Linux']
    name: Update-Manifest
    needs: docker-build
    steps:
      - uses: actions/checkout@v2

      - name: Write Manifest
        env:
          DOCKERHUB: ${{ secrets.DOCKERHUB }}
          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
          export DOCKER_CONFIG=$HOME/.docker
          echo $DOCKERHUB | docker login -u fastandfearless --password-stdin
          eval $(neckless kv ls --ghAddMask  --shKeyValue AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY)
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          make manifest REPO=public.ecr.aws/d3g6c8d4

  docker-build:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        include:
          - platform: ['self-hosted', 'Linux', 'ARM64']
            arch: arm64
          - platform: ['self-hosted', 'Linux', 'ARM']
            arch: arm
          - platform: ['self-hosted', 'Linux', 'X64']
            arch: amd64

    name: Build Docker ${{ matrix.arch }}
    steps:
      - uses: actions/checkout@v2

      - name: Build Docker
        env:
          DOCKERHUB: ${{ secrets.DOCKERHUB }}
          NECKLESS_PRIVKEY: ${{ secrets.NECKLESS_PRIVKEY }}
        run: |
          export DOCKER_CONFIG=$HOME/.docker
          echo $DOCKERHUB | docker login -u fastandfearless --password-stdin
          eval $(neckless kv ls --ghAddMask  --shKeyValue AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY)
          aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
          make all REPO=public.ecr.aws/d3g6c8d4
          make push REPO=public.ecr.aws/d3g6c8d4


